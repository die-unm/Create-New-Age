plugins {
	id "dev.architectury.loom" version "1.1-SNAPSHOT"
	id "maven-publish"
}

version = project.mod_version
group = project.maven_group

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
archivesBaseName = project.archives_base_name

repositories {
	mavenLocal()
	maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
	maven { url = "https://maven.parchmentmc.org" } // Parchment mappings
	maven { url = "https://api.modrinth.com/maven" } // LazyDFU
	maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
	maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	maven { url = "https://cursemaven.com" } // Forge Config API Port
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
	maven { url = "https://maven.tterrag.com/" } // Flywheel
	maven {
		// Location of the maven that hosts Mine and Team Resourceful's files.
		name = "Resourceful Bees Maven"
		url = "https://maven.resourcefulbees.com/repository/maven-public/"
	}
}

loom {
	mods {
		"create-new-age" {
			sourceSet sourceSets.main
		}
	}
}

configurations.configureEach {
	resolutionStrategy.eachDependency {
		if (requested.module.name == "fabric-loader") {
			useVersion(loader_version)
		}
	}
}


dependencies {
	minecraft("com.mojang:minecraft:${minecraft_version}")
	mappings(loom.layered {
		it.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${qm_version}:intermediary-v2")
		it.parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
		it.officialMojangMappings { nameSyntheticMembers = false }
	})

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	implementation "org.joml:joml:1.10.5"

	// Oh great create
	modImplementation("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}")
	modImplementation("com.github.AlphaMode:fakeconfig:master-SNAPSHOT") { exclude(group: "net.fabricmc.fabric-api") }
	modImplementation("com.github.AlphaMode:fakeconfigtoml:master-SNAPSHOT") { exclude(group: "net.fabricmc.fabric-api") }

	// Botarium for energy API
	modImplementation "earth.terrarium:botarium-common-${minecraft_version}:${botarium_version}"
	modApi("earth.terrarium:botarium-fabric-${minecraft_version}:${botarium_version}")

	// For testing electricity stuff, don't actually use classes provided by it
//	 modImplementation("earth.terrarium.adastra:ad_astra-fabric-$minecraft_version:$ad_astra_version")

	modImplementation("com.terraformersmc:modmenu:${modmenu_version}")

	modCompileOnly("dev.emi:emi-fabric:${emi_version}");
	modCompileOnly("maven.modrinth:jei:${jei_version}")
	modCompileOnly("me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}");


	switch (recipe_viewer.toLowerCase(Locale.ROOT)) {
		case "jei": modLocalRuntime("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}"); break
		case "rei": modLocalRuntime("me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"); break
		case "emi": modLocalRuntime("dev.emi:emi-fabric:${emi_version}"); break
		case "disabled": break
		default: println("Unknown recipe viewer specified: ${recipe_viewer}. Must be JEI, REI, EMI, or disabled.")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}